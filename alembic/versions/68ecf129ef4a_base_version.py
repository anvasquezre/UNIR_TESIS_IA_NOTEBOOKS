"""base version

Revision ID: 68ecf129ef4a
Revises: 
Create Date: 2025-05-21 23:38:33.006642

"""
import sqlmodel
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '68ecf129ef4a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions_documents',
    sa.Column('docId', sa.Integer(), nullable=False),
    sa.Column('ucsf_document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ucsf_document_page_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('llm_tokens_count', sa.Integer(), nullable=True),
    sa.Column('text_length', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('docId'),
    sa.UniqueConstraint('docId')
    )
    op.create_table('questions_questions',
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('question_types', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('image_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('docId', sa.Integer(), nullable=True),
    sa.Column('ucsf_document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ucsf_document_page_no', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('expected_answers', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('data_split', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['docId'], ['questions_documents.docId'], ),
    sa.PrimaryKeyConstraint('questionId'),
    sa.UniqueConstraint('questionId')
    )
    op.create_table('question_answers',
    sa.Column('answerId', sa.Integer(), nullable=False),
    sa.Column('questionId', sa.Integer(), nullable=True),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('json_errors', sa.Integer(), nullable=True),
    sa.Column('experiment_label', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['questionId'], ['questions_questions.questionId'], ),
    sa.PrimaryKeyConstraint('answerId'),
    sa.UniqueConstraint('answerId')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('question_answers')
    op.drop_table('questions_questions')
    op.drop_table('questions_documents')
    # ### end Alembic commands ###
